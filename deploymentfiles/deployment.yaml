
# PostgreSQL Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres-pod
      app: voting-app
  template:
    metadata:
      name: postgres-pod
      labels:
        name: postgres-pod
        app: voting-app

    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
          - name: POSTGRES_USER
            value: "postgres"
          - name:  POSTGRES_PASSWORD
            value: "postgres"

---

# PostgreSQL Service

apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    name: db-service
    app: voting-app
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    name: postgres-pod
    app: voting-app

---

# Redis Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: voting-app
    name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis-pod
      app: voting-app
  template:
    metadata:
      name: redis-pod
      labels:
        name: redis-pod
        app: voting-app
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379

---

# Redis Service

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    name: redis-service
    app: voting-app
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    name: redis-pod
    app: voting-app

---

# Voting App Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-app-deployment
  labels:
    name: voting-app-deployment
    app: voting-app
spec:
  replicas: 2
  selector:
    matchLabels:
      name: voting-app-pod
      app: voting-app
  template:
    metadata:
      name: voting-app-pod
      labels:
        name: voting-app-pod
        app: voting-app

    spec:
      containers:
      - name: voting-app
        image: dockersamples/examplevotingapp_vote
        ports:
        - containerPort: 80

---

# Voting App Service

apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    name: voting-service
    app: voting-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: voting-app-pod
    app: voting-app

---

# Result App Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-app-deployment
  labels:
    app: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: result-app-pod
      app: voting-app
  template:
    metadata:
      name: result-app-pod
      labels:
        name: result-app-pod
        app: voting-app

    spec:
      containers:
      - name: result-app
        image: dockersamples/examplevotingapp_result
        ports:
        - containerPort: 80

---

# Result App Service

apiVersion: v1
kind: Service
metadata:
  name: result
  labels:
    name: result-service
    app: voting-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: result-app-pod
    app: voting-app

---

# Worker App Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-app-deployment
  labels:
    app: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: worker-app-pod
      app: voting-app
  template:
    metadata:
      name: worker-app-pod
      labels:
        name: worker-app-pod
        app: voting-app
    spec:
      containers:
      - name: worker-app
        image: dockersamples/examplevotingapp_worker

