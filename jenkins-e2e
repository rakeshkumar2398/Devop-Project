pipeline {
    agent any

    stages {
        stage('Git') {
            steps {
                echo 'Cloning code'
             git branch: 'main', url: 'https://github.com/rakeshkumar2398/Devop-Project.git'
            }
        }

        stage('Scan code of stage git') {
            steps {
                echo 'Scan using sonarqube'
              sh '''
                    mvn sonar:sonar \
                      -Dsonar.projectKey=Devop-Project \
                      -Dsonar.host.url=http://13.218.32.205:9000 \
                      -Dsonar.login=squ_6e584d487912c220e5f02380757b34fd3a7d155f
                '''  
            }
        }

         stage('Maven Build') {
            steps {
                echo 'Artifact'
                sh 'ls -lrt'
                sh 'mvn clean package'
            }
        }

        stage('DOCKER-BUILD-IMAGE') {
            steps {
             echo 'Building Docker Image'
             sh 'docker build -t rakesh2398/dockerhub:${BUILD_NUMBER} -f Dockerfile .'
            }
        }

        stage('Trivy Scan') {   
            steps {
             echo 'Running Trivy Scan'
             sh '''
docker run --rm \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /data/trivy-cache:/root/.cache/trivy \
  aquasec/trivy:latest image rakesh2398/dockerhub:${BUILD_NUMBER}
'''
            }
        }
        stage('Docker Push') {
            steps {
                echo 'Pushing Docker Image to Docker Hub'
                    withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerhub')]) {
                    sh ' docker login -u rakesh2398 -p ${dockerhub}'
                    sh 'docker push rakesh2398/dockerhub:${BUILD_NUMBER}'
                }
            }
        }
        stage('Update Deployment File') { 
            environment { 
                GIT_REPO_NAME = "Devop-Project" 
                GIT_USER_NAME = "rakeshkumar2398" 
            } 
            steps { 
                echo 'Update Deployment File' 
                withCredentials([string(credentialsId: 'githubtoken', variable: 'githubtoken')]) {
                    sh '''
                        git config user.email "useandthrow14@gmail.com"
                        git config user.name "RakeshKumar"
                        sed -i "s/dockerhub:.*/dockerhub:${BUILD_NUMBER}/g" e2e-project/project.yml
                        git add . 
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}" 
                        git push https://${githubtoken}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main ''' 
                } 

            } 
        } 
         
    } 
}
